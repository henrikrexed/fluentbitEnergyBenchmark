apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: fluent-bit
    meta.helm.sh/release-namespace: fluentbit
  labels:
    app.kubernetes.io/instance: fluent-bit
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/version: 2.2.1
    helm.sh/chart: fluent-bit-0.42.0
  name: fluent-bit
  namespace: fluentbit
data:
  custom_parsers.conf: |
    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
  fluent-bit.yaml: |
    service:
      http_server: "on"
      Health_Check: "on"



    pipeline:
      inputs:
        - name: tail
          path: /var/log/containers/*.log
          multiline.parser: docker, cri
          tag: kube.*
          mem_Buf_Limit: 5MB
          skip_Long_Lines: On
          processors:
            logs:
              - name: content_modifier
                action: insert
                key: k8s.cluster.name 
                context: attributes
                value: ${CLUSTERNAME}
              - name: content_modifier
                action: insert
                context: attributes
                key: dt.kubernetes.cluster.id
                value: ${CLUSTER_ID}
              - name: content_modifier
                context: attributes
                action: upsert
                key: "agent"
                value: "fluentbitv3"
              
        
        - name: fluentbit_metrics
          tag:  metric.fluent
          scrape_interval: 2
    
        - name: opentelemetry
          listen: ${MY_POD_IP}
          port: 4317
          tag: otel.otlphttp
          processors:
            traces:
              - name: content_modifier
                context: span_attributes
                action: upsert
                key: "agent"
                value: "fluentbitv3"
            logs:
              - name: content_modifier
                action: insert
                key: k8s.cluster.name 
                context: attributes
                value: ${CLUSTERNAME}
              - name: content_modifier
                action: insert
                context: attributes
                key: dt.kubernetes.cluster.id
                value: ${CLUSTER_ID}
              - name: content_modifier
                context: attributes
                action: upsert
                key: "agent"
                value: "fluentbitv3"
            metrics:
              - name: labels
                insert: k8s.cluster.name ${CLUSTERNAME}
              - name: labels
                insert: dt.kubernetes.cluster.id ${CLUSTER_ID}
              - name: labels
                upsert: agent fluentbitv3
    
        - name: opentelemetry
          listen: ${MY_POD_IP}
          port: 4318
          tag: otel.otlphttp
          processors:
            traces:
              - name: content_modifier
                context: span_attributes
                action: upsert
                key: "agent"
                value: "fluentbitv3"
            logs:
              - name: content_modifier
                action: insert
                key: k8s.cluster.name 
                value: ${CLUSTERNAME}
                context: attributes
              - name: content_modifier
                action: insert
                context: attributes
                key: dt.kubernetes.cluster.id
                value: ${CLUSTER_ID}
              - name: content_modifier
                context: attributes
                action: upsert
                key: "agent"
                value: "fluentbitv3"
            metrics:
              - name: labels
                insert: k8s.cluster.name ${CLUSTERNAME}
              - name: labels
                insert: dt.kubernetes.cluster.id ${CLUSTER_ID}
              - name: labels
                upsert: agent fluentbitv3
    
        - name:  prometheus_scrape
          host: prometheus-prometheus-node-exporter.prometheus.svc.cluster.local
          port: 9100
          tag:   metric.node_metrics
          scrape_interval: 5
          processors:
            metrics:
              - name: opentelemetry_envelope
              - name: metrics_selector
                metric_name: /scrape_/
                action: exclude
              - name: metrics_selector
                metric_name: /go_/
                action: exclude
              - name: metrics_selector
                metric_name: /up/
                action: exclude
    
    
    
    
        - name:  prometheus_scrape
          host: prometheus-kube-state-metrics.prometheus.svc.cluster.local
          port: 8080
          tag:   metric.kube_state_metric
          scrape_interval: 5       
          processors:
            metrics:
              - name: opentelemetry_envelope
              - name: metrics_selector
                metric_name: /scrape_/
                action: exclude
              - name: metrics_selector
                metric_name: /go_/
                action: exclude
              - name: metrics_selector
                metric_name: /up/
                action: exclude
    
    
        - name: prometheus_scrape
          host: kepler.kepler.svc.cluster.local
          port: 9102
          tag: metric.kepler 
          processors:
            metrics:
              - name: opentelemetry_envelope
              - name: metrics_selector
                metric_name: /scrape_/
                action: exclude
              - name: metrics_selector
                metric_name: /go_/
                action: exclude
              - name: metrics_selector
                metric_name: /up/
                action: exclude
              - name: metrics_selector
                metric_name: /kepler_process_uncore_joules/
                action: exclude
              - name: labels
                delete: container_id
              - name: labels
                delete: pid

     
      filters:
        
        - name: kubernetes
          match: kube.*
          merge_log: on
          keep_log: off
          k8s-logging.parser : on
          k8S-logging.exclude: on

        - name: nest
          match: kube.*
          operation: lift
          nested_under: kubernetes
          add_prefix :  kubernetes_
        - name: nest
          match: kube.*
          operation: lift
          nested_under: kubernetes_labels
        - name: modify
          match: kube.*
          rename: 
            - log content
            - kubernetes_pod_name k8s.pod.name
            - kubernetes_namespace_name k8s.namespace.name
            - kubernetes_container_name k8S.container.name
            - kubernetes_pod_id k8s.pod.uid
          remove: 
             - kubernetes_container_image
             - kubernetes_docker_id
             - kubernetes_annotations
             - kubernetes_host
             - time
             - kubernetes_container_hash
        - name: throttle
          match: "*"
          rate:     800
          window:   3
          print_Status: true
          interval: 30s
        
        

      outputs:
        - name: opentelemetry
          host: ${DT_ENDPOINT_HOST}
          port: 443
          match: "otel.*"
          metrics_uri: /api/v2/otlp/v1/metrics
          traces_uri:  /api/v2/otlp/v1/traces
          logs_uri: /api/v2/otlp/v1/logs
          log_response_payload: true
          tls:  On
          tls.verify: Off
          header:
            - Authorization Api-Token ${DT_API_TOKEN}
            - Content-type application/x-protobuf
    
        - name: opentelemetry
          host: ${DT_ENDPOINT_HOST}
          port: 443
          match: "kube.*"
          metrics_uri: /api/v2/otlp/v1/metrics
          traces_uri:  /api/v2/otlp/v1/traces
          logs_uri: /api/v2/otlp/v1/logs
          log_response_payload: true
          tls:  On
          tls.verify: Off
          header:
            - Authorization Api-Token ${DT_API_TOKEN}
            - Content-type application/x-protobuf
          processors:
            logs:
               - name: opentelemetry_envelope
        
        - name: opentelemetry
          host: otel-collector.default.svc.cluster.local
          port: 4318
          match: "metric.*"
          metrics_uri: /v1/metrics
          traces_uri:  /v1/traces
          logs_uri: /v1/logs
          log_response_payload: true
          tls:  Off
          tls.verify: Off
          header:
            - Content-type application/x-protobuf
       
     
          
    
        


